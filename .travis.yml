# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    - CRATE_NAME=uvm

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

matrix:
  include:
    - env:
      - TARGET=x86_64-unknown-linux-gnu
      - RELEASE=YES
    - env:
      - TARGET=x86_64-unknown-linux-gnu

    # OSX
    - env:
      - TARGET=i686-apple-darwin
      - RELEASE=YES
      os: osx
    - env:
      - TARGET=i686-apple-darwin
      os: osx
    - env:
      - TARGET=x86_64-apple-darwin
      - RELEASE=YES
      os: osx
    - env:
      - TARGET=x86_64-apple-darwin
      os: osx

    # Windows
    - env:
      - TARGET=x86_64-pc-windows-msvc
      - RELEASE=YES
      os: windows

    - env:
      - TARGET=x86_64-pc-windows-msvc
      os: windows

    - env:
      - TARGET=x86_64-pc-windows-msvc
      - RELEASE=YES
      os: windows

    - env:
      - TARGET=x86_64-pc-windows-msvc
      os: windows

    - env:
      - TARGET=i686-pc-windows-msvc
      - RELEASE=YES
      os: windows

    - env:
      - TARGET=i686-pc-windows-msvc
      os: windows

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly
    - env: TARGET=x86_64-pc-windows-msvc
      os: windows
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "Pj85fffQWf2fy5t9ZtJVQsBKimzIP47WtH13PdRJlURmLSvmRX8ePH4u5Pu/fjXndsQqK69fWHHWnwppPBGE2ledsDKgkWFlrqHqRHmamyHg2xUSekoFK4AGPZsJxNj5OAxTTl3PUdPB6NzFHdBZf6TrrylUlf79uOBuosZC3TJ53uJdRCtFC6wzIImhnapnymsc13Hju3NboXtXFUN2W39fNrNxd7o+MbJltZCwdCNHXtItsRsI2Q24U3Fb6GfhQSA3n4ouYLP96Qrdm6T4lYUJ1uedMynhsnEKRgOxkMzqlIeSPG7ZKFsHdaLvS1pwVODCFdRzw3o9WGhtQeQxUej065/E2UtTjsD/YVHcEPGYDAAkSBUw1W+upayMwEx6v5uOOKW/RwNF0xxF2a1PHtoAv7OangmIJ0v9Bsj4LYVVcd4gzXnQGsPUu+RfpV/erxxIyfId3AvRj+LumUGJ6gk52VXkBjyRY2QDaP9ER3MeBqHCdAKD1o/dtc55Z701OTDFxXGSIHboDhdUpdwsPPsggFIgJzfPP/Hm++4LM+QrBlTx8f9mfwB9TQ7L923SC0vUZPy0HMVZV0nlarJJzBpsKTCjirb2UzPbNM31xxpSH4BI39rW/MqpKTdDUpwM1QlU1ccoOWHowD65lzkPNjClS01Sa3iBjwc7fTGYRKE="
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

notifications:
  email:
    on_success: never
